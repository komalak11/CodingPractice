package CTCI;

import java.util.Stack;

public class QueueViaStacks<T> {
	Stack<T> stackNewest,stackOldest;
	public void myQueue() {
		stackNewest = new Stack<T>();
		stackOldest = new Stack<T>();
	}
	public int size() {
		return stackNewest.size()+stackOldest.size();
	}
	public void add(T value) {
		stackNewest.push(value);
	}
	public void shiftStacks() {
		if(stackOldest.isEmpty()) {
			while(!stackNewest.isEmpty()) {
				stackOldest.push(stackNewest.pop());
			}
		}
	}
	public T peek() {
		shiftStacks();
		return stackOldest.peek();
	}
	public T remove() {
		shiftStacks();
		return stackOldest.pop();
	}
	public static void main(String[] args) {
		QueueViaStacks queues = new QueueViaStacks();
		Stack enQueue = null,deQueue = null;
		queues.stackNewest = enQueue;
		queues.stackOldest = deQueue;
		
	}
}
